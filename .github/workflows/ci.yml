name: CI

on:
  push:
    # Publish `master` as Docker `latest` image.
    branches:
      - 'feature/*'
      - 'bugfix/*'
      - 'hotfix/*'
      - 'release/*'

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  # TODO: Change variable to your image's name.
  IMAGE_NAME: docker.datascience

jobs:
  build_data_science_image:
    name: Build Data Science Image
    runs-on: ubuntu-latest
    outputs:
      docker_version: ${{ steps.changed_files.outputs.build_image }}

    steps:
      - uses: actions/checkout@v3

      # Detect file changes: https://stackoverflow.com/questions/70708306/github-actions-run-step-job-in-a-workflow-if-changes-happen-in-specific-folde
      - name: Detecting file changes
        uses: dorny/paths-filter@v2
        id: changed_files
        with:
          base: dev
          filters: |
            build_image:
              - 'Dockerfile'
              - 'Dockerfile.base'
              - 'Makefile'
              - 'poetry.lock'
              - 'pyproject.toml'
              - 'debian-requirements.txt'

      - name: Build docker image if it is not on registry
        if: steps.changed_files.outputs.build_image == 'true'
        run: make image

      - name: Login to Dockerhub
        if: steps.changed_files.outputs.build_image == 'true'
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker hub Registry
        if: steps.changed_files.outputs.build_image == 'true'
        run: |
          IMAGE_ID=${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=$(git ls-files -s Dockerfile | awk '{print $2}' | cut -c1-16)

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo IMAGE_NAME=$IMAGE_NAME

          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION

          docker tag $IMAGE_ID:$VERSION $IMAGE_ID:latest
          docker push $IMAGE_ID:latest

  build_variant_images:
    needs: build_data_science_image
    name: Build Variant Images
    runs-on: ubuntu-latest
    strategy:
      matrix:
       variant: [keras, pymc, sklearn, pycaret, dask]
    
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Build docker image if it is not on registry
        run: make image_${{ matrix.variant }}
        
      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with: 
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push image to Docker hub Registry
        run: |
          IMAGE_ID=${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')

          # Strip git ref prefix from version
          VERSION=${{ matrix.variant }}

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          echo IMAGE_NAME=$IMAGE_NAME

          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/$IMAGE_NAME:$VERSION $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION